export const phoneRegExpArr = [
  // Generic international numbers with +\d code, like +1 (123) 123-123
  /(\+\s?(?:9[976]\d|8[987530]\d|6[987]\d|5[90]\d|42\d|3[875]\d|2[98654321]\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)(?:[-\s.]{0,1}(?:\(?)(?:\d{0,6})(?:\)?)){5,14}(?=[^\d:\-./]|$))/,
  // HK Macau ...
  /((?:^|[^\d\w#])(?:\({0,1}8[987530]\d\){0,1}\s{0,1})(?:\d[-\s]{0,1}){8}(?=[^\d]|$))/,

  // FR
  /((?:^|[^\d\w#])(?:(?:[\](]{0,1}(?:\s?33\s?)[\])]{0,1}\s{0,1}){1}(?:\({0,1}\d{1,2}\){0,1})(?:(?:[.\s]\d\d){4}|\d{8})|(?:\d{2}(?:[.\s]\d\d){4}))(?=[^\d]|$))/,

  // UK
  /(?:^|[^\d\w#])(\({0,1}0\d{2}\){0,1}(?:[-\s]{0,1}\d){8}(?=[^\d]|$))/,
  /(?:^|[^\d\w#])(\({0,1}0\d{3}\){0,1}(?:[-\s]{0,1}\d){6,7}(?=[^\d]|$))/,
  /(?:^|[^\d\w#])(\({0,1}0\d{4}\){0,1}(?:[-\s]{0,1}\d){6}(?=[^\d]|$))/,
  /(?:^|[^\d\w#])(\({0,1}0\d{5}\){0,1}(?:[-\s]{0,1}\d){4,5}(?=[^\d]|$))/,

  // 10-11 digits USA, Canada
  /(?:^|[^\d\w#])((?:\+)?(?:1[-\s.]{0,1})?(?:[-\s(]{0,1}[1-9]\d{2}[-\s).]{0,1})(?:(?:(?:[-\s]{0,1}\d){7})|(?:\d{3}\.\d{4}))(?=[^\d:-\w]|$))/,

  // 7 digits USA
  // removed due to RCINT-3013
  /(?:^|[^\d\w#/])((?:\d[-\s]{0,1}){7,12}(?=[^\d]|$))/,
];

export function extractPhoneNumber(str = '') {
  let result: string | undefined;

  for (const regex of phoneRegExpArr) {
    const match = str.match(regex);
    if (match) {
      result = match[0].trim();
      break;
    }
  }

  return result;
}
